#include <stdio.h>
#include <string.h>
#include <limits.h>
#define MAX 126
int bc[MAX];
int max (int a, int b)
{
 return (a > b)? a: b;
}
void bctable (char p[])
{
 int i,j,m;
 m = strlen(p);
 for (i=0;i<MAX;i++)
 bc[i] = m;
 for (j=0;j<m-1;j++)
 bc[(int)p[j]] = m-1-j;
}
int boyer (char txt[],char p[])
{
 int n = strlen(txt);
 int m = strlen(p);
 printf ("Length of Text = %d\n",n);
 printf ("Length of Pattern = %d\n",m);
 int i = m-1;
 while (i<n)
 {
 int k = 0;
 while ((k<m) && (p[m-1-k] == txt[i-k]))
 k++;
 if (k == m)
 return (i-m+1);
 else
 i = i + max(1,bc[(int)txt[i]]-k);
 }
 return -1;
}
int main ()
{
 char txt[100],p[100];
 int pos;
 printf ("Enter the Text in which Pattern is to be Searched\n");
 gets (txt);
 printf ("Enter the Pattern to be Searched\n");
 gets (p);
 bctable (p);
 pos = boyer (txt,p);
 if (pos >= 0)
 printf ("Pattern was found starting from position %d\n",pos+1);
 else
 printf ("Pattern was not found\n");
 return 0;
}
